[{"D:\\projo\\ecom\\src\\index.js":"1","D:\\projo\\ecom\\src\\App.js":"2","D:\\projo\\ecom\\src\\components\\Products\\Products.jsx":"3","D:\\projo\\ecom\\src\\components\\Products\\Product\\Product.jsx":"4","D:\\projo\\ecom\\src\\components\\Products\\Product\\styles.js":"5","D:\\projo\\ecom\\src\\components\\index.js":"6","D:\\projo\\ecom\\src\\components\\Navbar\\Navbar.jsx":"7","D:\\projo\\ecom\\src\\components\\Navbar\\styles.js":"8","D:\\projo\\ecom\\src\\components\\Products\\styles.js":"9","D:\\projo\\ecom\\src\\lib\\commerce.js":"10","D:\\projo\\ecom\\src\\components\\Cart\\Cart.jsx":"11","D:\\projo\\ecom\\src\\components\\Cart\\styles.js":"12","D:\\projo\\ecom\\src\\components\\Cart\\CartItem\\CartItem.jsx":"13","D:\\projo\\ecom\\src\\components\\Cart\\CartItem\\styles.js":"14","D:\\projo\\ecom\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx":"15","D:\\projo\\ecom\\src\\components\\CheckoutForm\\Checkout\\styles.js":"16","D:\\projo\\ecom\\src\\components\\CheckoutForm\\AddressForm.jsx":"17","D:\\projo\\ecom\\src\\components\\CheckoutForm\\PaymentForm.jsx":"18","D:\\projo\\ecom\\src\\components\\CheckoutForm\\FormInput.jsx":"19","D:\\projo\\ecom\\src\\components\\CheckoutForm\\Review.jsx":"20","D:\\projo\\ecom\\src\\components\\Products\\ProductsN.jsx":"21"},{"size":153,"mtime":1607352565897,"results":"22","hashOfConfig":"23"},{"size":2773,"mtime":1608217573056,"results":"24","hashOfConfig":"23"},{"size":1383,"mtime":1608188555226,"results":"25","hashOfConfig":"23"},{"size":1333,"mtime":1607690782761,"results":"26","hashOfConfig":"23"},{"size":364,"mtime":1607355506098,"results":"27","hashOfConfig":"23"},{"size":236,"mtime":1608482209539,"results":"28","hashOfConfig":"23"},{"size":1659,"mtime":1607956005946,"results":"29","hashOfConfig":"23"},{"size":1633,"mtime":1607604354307,"results":"30","hashOfConfig":"23"},{"size":300,"mtime":1607605153773,"results":"31","hashOfConfig":"23"},{"size":245,"mtime":1608218789116,"results":"32","hashOfConfig":"23"},{"size":2337,"mtime":1607957463635,"results":"33","hashOfConfig":"23"},{"size":599,"mtime":1607694064946,"results":"34","hashOfConfig":"23"},{"size":1504,"mtime":1607957226825,"results":"35","hashOfConfig":"23"},{"size":351,"mtime":1607954342243,"results":"36","hashOfConfig":"23"},{"size":3607,"mtime":1608216040248,"results":"37","hashOfConfig":"23"},{"size":1210,"mtime":1607960342807,"results":"38","hashOfConfig":"23"},{"size":5410,"mtime":1608036349179,"results":"39","hashOfConfig":"23"},{"size":4539,"mtime":1608224963437,"results":"40","hashOfConfig":"23"},{"size":512,"mtime":1608200538781,"results":"41","hashOfConfig":"23"},{"size":1017,"mtime":1608047363969,"results":"42","hashOfConfig":"23"},{"size":1945,"mtime":1608487405932,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1424e34",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\projo\\ecom\\src\\index.js",[],["92","93"],"D:\\projo\\ecom\\src\\App.js",[],"D:\\projo\\ecom\\src\\components\\Products\\Products.jsx",[],["94","95"],"D:\\projo\\ecom\\src\\components\\Products\\Product\\Product.jsx",[],"D:\\projo\\ecom\\src\\components\\Products\\Product\\styles.js",[],"D:\\projo\\ecom\\src\\components\\index.js",[],"D:\\projo\\ecom\\src\\components\\Navbar\\Navbar.jsx",["96","97","98"],"import React from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  Badge,\r\n  MenuItem,\r\n  Menu,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { ShoppingCart } from \"@material-ui/icons\";\r\nimport useStyles from \"./styles\";\r\nimport Logo from \"../../assets/logo.jpg\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\n\r\nconst Navbar = ({ cart }) => {\r\n  console.log(\"CART->\", cart);\r\n  if (cart === undefined) {\r\n    var val = 0;\r\n  } else {\r\n    var val = cart.total_items;\r\n  }\r\n\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n  return (\r\n    <>\r\n      <AppBar position=\"fixed\" className={classes.appBar} color=\"inherit\">\r\n        <Toolbar>\r\n          <Typography\r\n            component={Link}\r\n            to=\"/\"\r\n            variant=\"h6\"\r\n            className={classes.title}\r\n            color=\"inherit\"\r\n          >\r\n            <img\r\n              src={Logo}\r\n              alt=\"darity100\"\r\n              height=\"25px\"\r\n              className={classes.image}\r\n            />\r\n            The shop\r\n          </Typography>\r\n          <div className={classes.grow} />\r\n          {location.pathname === \"/\" && (\r\n            <div className={classes.button}>\r\n              <IconButton\r\n                component={Link}\r\n                to=\"/cart\"\r\n                aria-label=\"show cart items\"\r\n                color=\"inherit\"\r\n              >\r\n                <Badge badgeContent={val} color=\"secondary\">\r\n                  <ShoppingCart />\r\n                </Badge>\r\n              </IconButton>\r\n            </div>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","D:\\projo\\ecom\\src\\components\\Navbar\\styles.js",[],"D:\\projo\\ecom\\src\\components\\Products\\styles.js",[],"D:\\projo\\ecom\\src\\lib\\commerce.js",[],"D:\\projo\\ecom\\src\\components\\Cart\\Cart.jsx",[],"D:\\projo\\ecom\\src\\components\\Cart\\styles.js",[],"D:\\projo\\ecom\\src\\components\\Cart\\CartItem\\CartItem.jsx",[],"D:\\projo\\ecom\\src\\components\\Cart\\CartItem\\styles.js",[],"D:\\projo\\ecom\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx",["99"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport {\r\n  Paper,\r\n  Stepper,\r\n  Step,\r\n  StepLabel,\r\n  Typography,\r\n  CircularProgress,\r\n  Divider,\r\n  Button,\r\n  CssBaseline,\r\n} from \"@material-ui/core\";\r\nimport PaymentForm from \"../PaymentForm\";\r\nimport AddressForm from \"../AddressForm\";\r\nimport { commerce } from \"../../../lib/commerce\";\r\nimport useStyles from \"./styles\";\r\n\r\nconst steps = [\"Shipping address\", \"Payment details\"];\r\n\r\nconst Checkout = ({ cart, onCaptureCheckout, order, error }) => {\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [checkoutToken, setCheckoutToken] = useState(null);\r\n  const [shippingData, setShippingData] = useState({});\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const generateToken = async () => {\r\n      try {\r\n        const token = await commerce.checkout.generateToken(cart.id, {\r\n          type: \"cart\",\r\n        });\r\n        // console.log(\"Token: \", token);\r\n        setCheckoutToken(token);\r\n      } catch (error) {\r\n        window.location.href = \"/\";\r\n      }\r\n    };\r\n    generateToken();\r\n  }, [cart]);\r\n\r\n  // console.log(\"checkoutToken: \", checkoutToken);\r\n\r\n  if (checkoutToken === null) return <div>Loading...</div>;\r\n\r\n  const nextStep = () => setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  const backStep = () => setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  // console.log(\"backStep: \", backStep);\r\n  const next = (data) => {\r\n    setShippingData(data);\r\n    nextStep();\r\n  };\r\n\r\n  let Confirmation = () =>\r\n    order.customer ? (\r\n      <>\r\n        <div>\r\n          <Typography variant=\"h5\">\r\n            Thank you for your purchase, {order.customer.firstname}{\" \"}\r\n            {order.customer.lastname}\r\n          </Typography>\r\n          <Divider className={classes.divider} />\r\n          <Typography variant=\"subtitle2\">\r\n            {\" \"}\r\n            Order Ref: {order.customer_reference}\r\n          </Typography>\r\n        </div>\r\n        <br />\r\n        <Button component={Link} to=\"/\" variant=\"outlined\" type=\"button\">\r\n          Back to Home\r\n        </Button>\r\n      </>\r\n    ) : (\r\n      <div className={classes.spinner}>\r\n        <CircularProgress />\r\n      </div>\r\n    );\r\n  if (error) {\r\n    <>\r\n      <Typography variant=\"h2\">Error: {error}</Typography>\r\n      <br />\r\n      <Button component={Link} to=\"/\" variant=\"outlined\" type=\"button\">\r\n        Back to Home\r\n      </Button>\r\n    </>;\r\n  }\r\n  const Form = () =>\r\n    activeStep === 0 ? (\r\n      <AddressForm checkoutToken={checkoutToken} next={next} />\r\n    ) : (\r\n      <PaymentForm\r\n        shippingData={shippingData}\r\n        checkoutToken={checkoutToken}\r\n        nextStep={nextStep}\r\n        backStep={backStep}\r\n        onCaptureCheckout={onCaptureCheckout}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      <div className={classes.toolbar} />\r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <Typography variant=\"h4\" align=\"center\">\r\n            Checkout\r\n          </Typography>\r\n          <Stepper activeStep={activeStep} className={classes.stepper}>\r\n            {steps.map((step) => (\r\n              <Step key={step}>\r\n                <StepLabel>{step}</StepLabel>\r\n              </Step>\r\n            ))}\r\n          </Stepper>\r\n          {activeStep === steps.length ? (\r\n            <Confirmation />\r\n          ) : (\r\n            checkoutToken && <Form />\r\n          )}\r\n        </Paper>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n","D:\\projo\\ecom\\src\\components\\CheckoutForm\\Checkout\\styles.js",[],"D:\\projo\\ecom\\src\\components\\CheckoutForm\\AddressForm.jsx",["100","101","102"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Input,\r\n  Button,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Typography,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport { useForm, FormProvider } from \"react-hook-form\";\r\nimport { Link } from \"react-router-dom\";\r\nimport FormInput from \"./FormInput\";\r\nimport { commerce } from \"../../lib/commerce\";\r\n\r\nconst AddressForm = ({ checkoutToken, next }) => {\r\n  const [shippingCountries, setShippingCountries] = useState([]);\r\n  const [shippingCountry, setShippingCountry] = useState(\"\");\r\n  const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\r\n  const [shippingSubdivision, setShippingSubdivision] = useState(\"\");\r\n  const [shippingOptions, setShippingOptions] = useState([]);\r\n  const [shippingOption, setShippingOption] = useState(\"\");\r\n\r\n  const methods = useForm();\r\n\r\n  const countries = Object.entries(shippingCountries).map(([code, name]) => ({\r\n    id: code,\r\n    label: name,\r\n  }));\r\n  const subdivisions = Object.entries(shippingSubdivisions).map(\r\n    ([code, name]) => ({\r\n      id: code,\r\n      label: name,\r\n    })\r\n  );\r\n  const options = shippingOptions.map((sO) => ({\r\n    id: sO.id,\r\n    label: `${sO.description} - (${sO.price.formatted_with_symbol})`,\r\n  }));\r\n\r\n  const fetchShippingCountries = async (checkoutTokenId) => {\r\n    const { countries } = await commerce.services.localeListShippingCountries(\r\n      checkoutTokenId\r\n    );\r\n    console.log(\"countries: \", countries);\r\n    setShippingCountries(countries);\r\n    setShippingCountry(Object.keys(countries)[0]);\r\n  };\r\n\r\n  const fetchSubdivisions = async (countryCode) => {\r\n    const { subdivisions } = await commerce.services.localeListSubdivisions(\r\n      countryCode\r\n    );\r\n    setShippingSubdivisions(subdivisions);\r\n    setShippingSubdivision(Object.keys(subdivisions)[0]);\r\n  };\r\n\r\n  const fetchShippingOptions = async (\r\n    checkoutTokenId,\r\n    country,\r\n    region = null\r\n  ) => {\r\n    const options = await commerce.checkout.getShippingOptions(\r\n      checkoutTokenId,\r\n      { country, region }\r\n    );\r\n    setShippingOptions(options);\r\n    setShippingOption(options[0].id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchShippingCountries(checkoutToken.id);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (shippingCountry) fetchSubdivisions(shippingCountry);\r\n  }, [shippingCountry]);\r\n\r\n  useEffect(() => {\r\n    if (shippingSubdivision)\r\n      fetchShippingOptions(\r\n        checkoutToken.id,\r\n        shippingCountry,\r\n        shippingSubdivision\r\n      );\r\n  }, [shippingSubdivision]);\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        {\" \"}\r\n        Shipping Address\r\n      </Typography>\r\n      <FormProvider {...methods}>\r\n        <form\r\n          onSubmit={methods.handleSubmit((data) =>\r\n            next({\r\n              ...data,\r\n              shippingCountry,\r\n              shippingSubdivision,\r\n              shippingOption,\r\n            })\r\n          )}\r\n        >\r\n          <Grid container spacing={3}>\r\n            <FormInput name=\"firstName\" label=\"First name\" />\r\n            <FormInput name=\"lastName\" label=\"Last name\" />\r\n            <FormInput name=\"address1\" label=\"Address\" />\r\n            <FormInput name=\"email\" label=\"Email\" />\r\n            <FormInput name=\"city\" label=\"City\" />\r\n            <FormInput name=\"zip\" label=\"ZIP / Postal code\" />\r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel>Shipping Country</InputLabel>\r\n\r\n              <Select\r\n                value={shippingCountry}\r\n                fullWidth\r\n                onChange={(e) => setShippingCountry(e.target.value)}\r\n              >\r\n                {countries.map((country) => (\r\n                  <MenuItem key={country.id} value={country.id}>\r\n                    {country.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel>Shipping Subdivision</InputLabel>\r\n              <Select\r\n                value={shippingSubdivision}\r\n                fullWidth\r\n                onChange={(e) => setShippingSubdivision(e.target.value)}\r\n              >\r\n                {subdivisions.map((subdivision) => (\r\n                  <MenuItem key={subdivision.id} value={subdivision.id}>\r\n                    {subdivision.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel>Shipping Options</InputLabel>\r\n              <Select\r\n                value={shippingOption}\r\n                fullWidth\r\n                onChange={(e) => setShippingOption(e.target.value)}\r\n              >\r\n                {options.map((option) => (\r\n                  <MenuItem key={option.id} value={option.id}>\r\n                    {option.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n          </Grid>\r\n          <br />\r\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n            <Button component={Link} to=\"/cart\" variant=\"outlined\">\r\n              Back to Cart\r\n            </Button>\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n              Next\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </FormProvider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddressForm;\r\n","D:\\projo\\ecom\\src\\components\\CheckoutForm\\PaymentForm.jsx",["103"],"import React from \"react\";\r\nimport { Typography, Button, Divider } from \"@material-ui/core\";\r\nimport {\r\n  Elements,\r\n  CardElement,\r\n  ElementsConsumer,\r\n} from \"@stripe/react-stripe-js\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\n\r\nimport Review from \"./Review\";\r\n\r\nconst stripePromise = loadStripe(\r\n  \"pk_test_51HygAGJorkHEA4pQgwoLPjtAEepgD1n2gKaeQogM3cFTSQCuOQ9ER7NjrBsCUu4k3y99NFUdHzECLGiustBMrCdq00OGXgiS5k\"\r\n);\r\n\r\nconst PaymentForm = ({\r\n  checkoutToken,\r\n  nextStep,\r\n  backStep,\r\n  shippingData,\r\n  onCaptureCheckout,\r\n}) => {\r\n  const handleSubmit = async (event, elements, stripe) => {\r\n    event.preventDefault();\r\n\r\n    if (!stripe || !elements) return;\r\n\r\n    const cardElement = elements.getElement(CardElement);\r\n\r\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n      type: \"card\",\r\n      card: cardElement,\r\n    });\r\n\r\n    if (error) {\r\n      console.log(\"[error]\", error);\r\n    } else {\r\n      const fakeData = {\r\n        line_items: {\r\n          // Key is the line item ID for our test product\r\n          item_GNqKE50NwdgBLV: {\r\n            quantity: 1,\r\n          },\r\n        },\r\n        customer: {\r\n          firstname: \"John\",\r\n          lastname: \"Doe\",\r\n          email: \"john.doe@example.com\",\r\n        },\r\n        shipping: {\r\n          name: \"International\",\r\n          street: \"123 Fake St\",\r\n          town_city: \"San Francisco\",\r\n          county_state: \"CA\",\r\n          postal_zip_code: \"94103\",\r\n          country: \"US\",\r\n        },\r\n        fulfillment: {\r\n          // The shipping method ID for \"USPS Ground\" (for example)\r\n          // You can use commerce.checkout.getShippingOptions() to get a list\r\n          shipping_method: \"ship_L1vOoZ02alRa8Z\",\r\n        },\r\n        payment: {\r\n          // Test Gateway is enabled by default, and is used when you submit orders with\r\n          // your sandbox API key\r\n          gateway: \"test_gateway\",\r\n          card: {\r\n            number: \"4242 4242 4242 4242\",\r\n            expiry_month: \"01\",\r\n            expiry_year: \"2023\",\r\n            cvc: \"123\",\r\n            postal_zip_code: \"94103\",\r\n          },\r\n        },\r\n      };\r\n      console.log(\r\n        \"checkoutToken.live.line_items: \",\r\n        checkoutToken.live.line_items\r\n      ); //convert array to object\r\n      console.log(\"shippingData.shippingOption: \", shippingData.shippingOption);\r\n      const orderData = {\r\n        line_items: checkoutToken.live.line_items,\r\n        customer: {\r\n          firstname: shippingData.firstName,\r\n          lastname: shippingData.lastName,\r\n          email: shippingData.email,\r\n        },\r\n        shipping: {\r\n          name: \"International\",\r\n          street: shippingData.address1,\r\n          town_city: shippingData.city,\r\n          county_state: shippingData.shippingSubdivision,\r\n          postal_zip_code: shippingData.zip,\r\n          country: shippingData.shippingCountry,\r\n        },\r\n        fulfillment: { shipping_method: shippingData.shippingOption },\r\n        payment: {\r\n          gateway: \"test_gateway\",\r\n          card: {\r\n            number: \"4242 4242 4242 4242\",\r\n            expiry_month: \"01\",\r\n            expiry_year: \"2023\",\r\n            cvc: \"123\",\r\n            postal_zip_code: \"94103\",\r\n          },\r\n        },\r\n      };\r\n\r\n      console.log(\"orderData\", orderData);\r\n      console.log(\"fakeData\", fakeData);\r\n\r\n      onCaptureCheckout(checkoutToken.id, fakeData);\r\n\r\n      nextStep();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Review checkoutToken={checkoutToken} />\r\n      <Divider />\r\n      <Typography variant=\"h6\" gutterBottom style={{ margin: \"20px 0\" }}>\r\n        Payment method\r\n      </Typography>\r\n      <Elements stripe={stripePromise}>\r\n        <ElementsConsumer>\r\n          {({ elements, stripe }) => (\r\n            <form onSubmit={(e) => handleSubmit(e, elements, stripe)}>\r\n              <CardElement />\r\n              <br /> <br />\r\n              <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                <Button variant=\"outlined\" onClick={backStep}>\r\n                  Back\r\n                </Button>\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  disabled={!stripe}\r\n                  color=\"primary\"\r\n                >\r\n                  Pay {checkoutToken.live.subtotal.formatted_with_symbol}\r\n                </Button>\r\n              </div>\r\n            </form>\r\n          )}\r\n        </ElementsConsumer>\r\n      </Elements>\r\n    </>\r\n  );\r\n};\r\nexport default PaymentForm;\r\n","D:\\projo\\ecom\\src\\components\\CheckoutForm\\FormInput.jsx",[],"D:\\projo\\ecom\\src\\components\\CheckoutForm\\Review.jsx",[],"D:\\projo\\ecom\\src\\components\\Products\\ProductsN.jsx",["104","105"],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"106","replacedBy":"110"},{"ruleId":"108","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":7,"column":3,"nodeType":"114","messageId":"115","endLine":7,"endColumn":11},{"ruleId":"112","severity":1,"message":"116","line":8,"column":3,"nodeType":"114","messageId":"115","endLine":8,"endColumn":7},{"ruleId":"117","severity":1,"message":"118","line":21,"column":9,"nodeType":"114","messageId":"119","endLine":21,"endColumn":12},{"ruleId":"112","severity":1,"message":"120","line":26,"column":9,"nodeType":"114","messageId":"115","endLine":26,"endColumn":16},{"ruleId":"112","severity":1,"message":"121","line":3,"column":3,"nodeType":"114","messageId":"115","endLine":3,"endColumn":8},{"ruleId":"122","severity":1,"message":"123","line":73,"column":6,"nodeType":"124","endLine":73,"endColumn":8,"suggestions":"125"},{"ruleId":"122","severity":1,"message":"126","line":86,"column":6,"nodeType":"124","endLine":86,"endColumn":27,"suggestions":"127"},{"ruleId":"112","severity":1,"message":"128","line":30,"column":20,"nodeType":"114","messageId":"115","endLine":30,"endColumn":33},{"ruleId":"112","severity":1,"message":"129","line":6,"column":3,"nodeType":"114","messageId":"115","endLine":6,"endColumn":12},{"ruleId":"130","severity":1,"message":"131","line":24,"column":17,"nodeType":"132","endLine":28,"endColumn":19},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],["133"],["134"],"no-unused-vars","'MenuItem' is defined but never used.","Identifier","unusedVar","'Menu' is defined but never used.","no-redeclare","'val' is already defined.","redeclared","'history' is assigned a value but never used.","'Input' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.","ArrayExpression",["135"],"React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'shippingCountry'. Either include them or remove the dependency array.",["136"],"'paymentMethod' is assigned a value but never used.","'CardMedia' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"141","text":"142"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry, shippingSubdivision]",{"range":"143","text":"144"},[2228,2230],"[checkoutToken.id]",[2524,2545],"[checkoutToken.id, shippingCountry, shippingSubdivision]"]